#define METAL_IMPORT "metal"
#define METAL_NAME "prog"

#include "./client/client.js"

#define CONFIG_PROTO "ws"

var ws = new WebSocket(CONFIG_PROTO + "://" + window.location.hostname + ':4201', 'text');

console.log("metal", metal, "prog", prog);
metal.start_kernel();
//console.log("start!", prog._start());
// mcp.mcp_init();

var target = null;

var dir_lbl = [ 'h', 'j', 'k', 'l', 'down', 'up' ],
        term = document.querySelector('#term'),
        form = document.querySelector('form'),
        input = document.querySelector('input'),
        modal = document.querySelector('.modal'),
        forgetbtn = document.getElementById('forget'),
        contents_btns = document.getElementById('contents'),
        rtitle = document.querySelector('#title'),
        rdesc = document.querySelector('#description'),
        map = document.querySelector('#map'),
        dir_btns = dir_lbl.map(function(id) {
		return document.querySelector('#dir #' + id);
	}),
        act = document.getElementById('act'),
        target_lbl = act.children[0];

function actions_reset() {
        act.style.display = 'none';
        target = null;
}

function cmd(str) {
	console.log("CMD", str);
        ws.send(str);
        actions_reset();
}

var nop_opacity = 0.2;

dir_btns.forEach(function(el) {
        el.onclick = cmd.bind(null, el.id);
        el.style.opacity = nop_opacity;
});

var username = localStorage.getItem('username');
var password = localStorage.getItem('password');

function login() {
	// localStorage.setItem('username', username);
	// localStorage.setItem('password', password);
        ws.send('auth ' + username + ' ' + password);
        forgetbtn.style.display = 'inline-block';
}

function forget() {
        localStorage.removeItem('username');
        localStorage.removeItem('password');
        location.reload();
}

forgetbtn.onclick = forget;

ws.binaryType = 'arraybuffer';

ws.onopen = function () {
        if (username && password) {
                login();
                help_hide();
        }
};

function scroll_reset() {
        term.scrollTop = term.scrollHeight;
}

function help_show() {
        modal.classList.add("f");
        modal.classList.remove("dn");
}

function help_hide() {
        modal.classList.add("dn");
        modal.classList.remove("f");
}

function output(stuff) {
        // term.append(stuff);
        term.innerHTML += stuff;
        scroll_reset();
}

ws.onclose = function () {
        output("Socket connection closed\n");
        // input.disabled = true;
        forgetbtn.style.display = 'none';
};

if (!username)
        promptUsername();

var actionable = {};

#include "canvas.hjs"

function dir_init(mask) {
        for (var i = 0; i < dir_lbl.length; i++)
                dir_btns[i].style.opacity
                        = (mask & 1 << i) ? 1 : nop_opacity;
}

ws.onmessage = function (e) {
        console.log("inserted", e.data);
};

var cmd_str = "";

input.onchange = function (e) {
	cmd_str = e.target.value;
};

function input_send(e) {
        if (input.value.match("http")) {
                var url = cmd_str.substr(cmd_str.indexOf("h"));
                cmd_str = ":meme " + url; 
        }
        cmd(cmd_str);
        input.blur();
        input.value = "";
        return false;
};

function gotPassword() {
        password = input.value;
        input.type = 'text';
        input.placeholder = input.value = "";

        login();
        form.onsubmit = input_send;
        return false;
}

function gotUsername() {
        username = input.value;
        input.value = "";
        input.placeholder = input.type = 'password';
        form.onsubmit = gotPassword;
        output("Thanks. What would your password be?\n");
        return false;
}

function focus() {
        input.focus();
        scroll_reset();
}

function promptUsername() {
        input.placeholder = "username";
        focus();
        form.onsubmit = gotUsername;
        output("Please insert username to login/register\n");
        return false;
}

if (username) {
        forgetbtn.style.display = 'inline-block';
        form.onsubmit = input_send;
} else {
        forgetbtn.style.display = 'none';
        form.onsubmit = gotUsername;
}

window.onkeydown = function(e) {
	// console.log('onkeydown', e.keyCode, e);
        help_hide();

        if (document.activeElement == input) {
                switch (e.keyCode) {
                        case 27:
                                input.blur();
                }
                return;
        }

        switch (e.keyCode) {
                case 83:
                        input.value = ":say ";
                        focus();
                        e.preventDefault();
                        break;
                case 186: // ":"
			if (e.shiftKey) {
				input.value = ":";
				focus();
				e.preventDefault();
			}
                        break;
		case 65: // "a":
                        focus();
                        e.preventDefault();
                        break;
		case 75:
		case 38: // "ArrowUp":
			if (e.shiftKey)
				cmd("K");
			else
				cmd("k");
                        break;
		case 74:
		case 49: // "ArrowDown":
			if (e.shiftKey)
				cmd("J");
			else
				cmd("j");
                        break;
		case 72:
		case 37: // "ArrowLeft":
			cmd("h");
                        break;
		case 76:
		case 39: // "ArrowRight":
			cmd("l");
                        break;
        }
};

window.onorientationchange = scroll_reset;
